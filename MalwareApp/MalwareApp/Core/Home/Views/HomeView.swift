//
//  HomeView.swift
//  MalwareApp
//
//  Created by Ernest Gaisie on 10/02/2025.
//

import SwiftUI

struct HomeView: View {
    @EnvironmentObject private var vm: HomeViewModel
    
    var body: some View {
        
        ZStack (alignment: .leading) {
            
            // background layer
            Color.theme.background.ignoresSafeArea()
            
                VStack(alignment: .leading) {
                    //header
                    header
                    
                    //topCard
                    topCard
                    
                    //appPrtotection Chip
                    protectionChip
                    
                    //URL List
                    if vm.isLoading {
                        ProgressView()
                            .scaleEffect(2.0)
                            .frame(maxWidth: .infinity, maxHeight: 150)
                    }
                    else if vm.errorMessage != nil {
                        retryButton(errorMessage: "errorMessage")
                            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .center)
                    }
                    else{
                        listing
                    }
                  
                    Spacer()
                }

            
        }
        .padding()
    }
}

struct HomeView_Preview: PreviewProvider {
    static var previews: some View {
        NavigationView {
            HomeView().navigationBarHidden(true)
        }.environmentObject(dev.homeVM)
    }
}



extension HomeView {
    private var header : some View {
        Text("App safety")
            .font(.system(size: 25))
            .padding(.bottom,30)

    }
    
    private var topCard : some View {
        VStack(alignment: .leading)  {
            
            CircleButtonView(iconName: "exclamationmark.shield")
            
            Text("Device at high risk!")
                .font(.system(size: 32))
                .padding(.leading)
                .foregroundColor(Color.white)
            
            Text(vm.lastScanDate)
                .font(.system(size: 16))
                .padding(.leading)
                .padding(.bottom, 25)
                .foregroundColor(Color.white)

            Button(action: {
                vm.reloadData()
            }) {
                Text("Start scan")
                    .font(.system(size: 15))
                    .foregroundColor(.white)
                    .frame(width: 150, height: 50)
                    .background(
                        RoundedRectangle(cornerRadius: 20)
                            .fill(Color.theme.deepRed)
                    )
            }
            .buttonStyle(PlainButtonStyle()) // Prevents default button styling
            .padding(.leading)
            .padding(.bottom)

                
        }
        .frame(maxWidth: .infinity, alignment: .leading)
        .background(
            RoundedRectangle(cornerRadius: 20)
                .fill(Color.theme.red)
                .shadow(
                    color: Color.theme.accent.opacity(0.15),
                    radius: 10,
                    x:0,
                    y:0
                )
        )

    }
    
    private var protectionChip:  some View {
        Text("App protection Enabled")
            .padding(.vertical,8)
            .padding(.horizontal,15)
            .font(.system(size: 12))
            .background(
                RoundedRectangle(cornerRadius: 20)
                    .fill(Color.gray)
                    .opacity(0.5)
            )
            .frame(maxWidth: .infinity)
            .padding(.top,10)

    }
    
    private var listing : some View {
        List {
            ForEach(vm.allStatuses) { status in
                StatusRowView(status: status)
          }
        }
        .listStyle(PlainListStyle())

    }
    
    private func retryButton(errorMessage: String) -> some View {
        VStack {
            Text(errorMessage)
                .font(.headline)
                .foregroundColor(.red)
                .multilineTextAlignment(.center)
                .padding()
            Button("Retry") {
                vm.isLoading = true
                vm.addSubscribers()
            }
            .padding()
            .background(Color.blue)
            .foregroundColor(.white)
            .cornerRadius(10)
        }

    }


}
